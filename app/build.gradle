buildscript {
    repositories {
        mavenCentral()
        maven { url 'https://maven.fabric.io/public' }
    }
    dependencies {
        // the latest version of the android-apt plugin
        classpath 'io.fabric.tools:gradle:1.+'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

android {
    signingConfigs {
        debug {
            Properties props = new Properties()
            try {
                props.load(new FileInputStream(".signing/debug.properties"))
                storeFile file('../.signing/debug.jks')
                storePassword(props['DEBUG_STORE_PASSWORD'])
                keyAlias(props['DEBUG_KEY_ALIAS'])
                keyPassword(props['DEBUG_KEY_PASSWORD'])
            } catch (IOException ignore) {
                // Ignore; use local default
            }
        }
        release {
            Properties props = new Properties()
            try {
                props.load(new FileInputStream(".signing/release.properties"))
                storeFile file('../.signing/release.jks')
                storePassword(props['RELEASE_STORE_PASSWORD'])
                keyAlias(props['RELEASE_KEY_ALIAS'])
                keyPassword(props['RELEASE_KEY_PASSWORD'])
            } catch (IOException e) {
                println "WARNING: Missing release keystore and properties"
                println e
            }
        }
        upload {
            Properties props = new Properties()
            try {
                props.load(new FileInputStream(".signing/upload-keystore.properties"))
                storeFile file('../.signing/upload-keystore.jks')
                storePassword(props['RELEASE_STORE_PASSWORD'])
                keyAlias(props['RELEASE_KEY_ALIAS'])
                keyPassword(props['RELEASE_KEY_PASSWORD'])
            } catch (IOException e) {
                println "WARNING: Missing release keystore and properties"
                println e
            }
        }

    }
    compileSdkVersion 26
    buildToolsVersion "26.0.0"
    defaultConfig {
        applicationId "com.pixplicity.cryptogram"
        minSdkVersion 14
        targetSdkVersion 26
        versionCode 183
        versionName "1.7.8"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            signingConfig signingConfigs.debug
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            // We're no longer using the release key, but an upload key for Google Play App Signing
            //signingConfig signingConfigs.release
            signingConfig signingConfigs.upload
        }
    }
}

task deleteTestResources(type: Delete) {
    delete "${projectDir}/src/test/resources/assets", "${projectDir}/src/test/resources/res"
}
task copyTestAssets(type: Copy) {
    from "${projectDir}/src/main/assets"
    into "${projectDir}/src/test/resources/assets"
}
task copyTestResources(type: Copy) {
    from "${projectDir}/src/main/res"
    into "${projectDir}/src/test/resources/res"
}

tasks.whenTaskAdded { task ->
    println 'task check: ' + task.getName()
    if (task.name == 'assembleDebug' || task.name == 'assembleRelease') {
        deleteTestResources.execute()
        copyTestAssets.execute()
        copyTestResources.execute()
    }
}

repositories {
    maven { url "https://dl.bintray.com/pixplicity/maven" }
    maven { url "https://dl.bintray.com/drummer-aidan/maven" }
    maven { url 'https://maven.fabric.io/public' }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'com.pixplicity.htmlcompat:library:1.0.0'

    implementation 'com.android.support:appcompat-v7:26.0.0-beta2'
    implementation 'com.android.support:support-v4:26.0.0-beta2'
    implementation 'com.android.support:support-annotations:26.0.0-beta2'
    implementation 'com.android.support:design:26.0.0-beta2'
    implementation 'com.android.support:recyclerview-v7:26.0.0-beta2'

    implementation 'com.google.android.gms:play-services-games:11.0.2'

    implementation 'com.jakewharton:butterknife:8.7.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.7.0'

    implementation 'com.afollestad:easyvideoplayer:0.2.13'

    implementation 'com.github.bumptech.glide:glide:3.8.0'

    implementation 'com.squareup:otto:1.3.8'

    implementation 'net.soulwolf.widget:ratiolayout:1.0.0'
    implementation 'com.afollestad.material-dialogs:core:0.9.3.0'

    implementation 'com.pixplicity.easyprefs:library:1.9.0'
    implementation 'com.pixplicity.generate:library:1.0'

    implementation 'com.google.code.gson:gson:2.8.1'

    implementation 'com.getkeepsafe.taptargetview:taptargetview:1.9.1'

    implementation('com.crashlytics.sdk.android:crashlytics:2.6.7@aar') {
        transitive = true;
    }

    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    testImplementation 'junit:junit:4.12'
    // FIXME only upgrade this to Mockito 2.* once Powermock 1.7.0 or later is out
    testImplementation 'org.mockito:mockito-core:1.10.19'
    testImplementation 'org.powermock:powermock-api-mockito:1.6.6'
    testImplementation 'org.powermock:powermock-module-junit4-rule-agent:1.6.6'
    testImplementation 'org.powermock:powermock-module-junit4-rule:1.6.6'
    testImplementation 'org.powermock:powermock-module-junit4:1.6.6'
}
